// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using alkemyumsa.DataAccess;

#nullable disable

namespace alkemyumsa.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230924010544_fixedTypoInTrabajoEntity")]
    partial class fixedTypoInTrabajoEntity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("alkemyumsa.Entities.Proyectos", b =>
                {
                    b.Property<int>("CodProyecto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cod_proyecto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodProyecto"), 1L, 1);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("DATETIME")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("VARCHAR(300)")
                        .HasColumnName("direccion");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("estado");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nombre_proyecto");

                    b.HasKey("CodProyecto");

                    b.ToTable("Proyecto");

                    b.HasData(
                        new
                        {
                            CodProyecto = 1,
                            Direccion = "Sector Montañoso El Olimpo, Bogotá.",
                            Estado = "Pendiente",
                            Nombre = "Sistema de información TechOil"
                        },
                        new
                        {
                            CodProyecto = 2,
                            Direccion = "Base Naval Atlántica, Buenos Aires.",
                            Estado = "Confirmado",
                            Nombre = "Plataforma petrolera"
                        },
                        new
                        {
                            CodProyecto = 3,
                            Direccion = "Parque Científico Gaia, Santiago.",
                            Estado = "Confirmado",
                            Nombre = "Perforación petrolera"
                        },
                        new
                        {
                            CodProyecto = 4,
                            Direccion = "Torre Empresarial Orion, Piso 20, Lima.",
                            Estado = "Terminado",
                            Nombre = "Capacitación de personal"
                        });
                });

            modelBuilder.Entity("alkemyumsa.Entities.Servicios", b =>
                {
                    b.Property<int>("CodServicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cod_servicio");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodServicio"), 1L, 1);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("DATETIME")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Descr")
                        .IsRequired()
                        .HasColumnType("VARCHAR(300)")
                        .HasColumnName("descr_servicio");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit")
                        .HasColumnName("estado_servicio");

                    b.Property<float>("ValorHora")
                        .HasColumnType("real")
                        .HasColumnName("valor_hora");

                    b.HasKey("CodServicio");

                    b.ToTable("Servicio");

                    b.HasData(
                        new
                        {
                            CodServicio = 1,
                            Descr = "Desarrollo y mantenimiento de sistemas de información para gestión petrolera.",
                            Estado = true,
                            ValorHora = 190000f
                        },
                        new
                        {
                            CodServicio = 2,
                            Descr = "Instalación de plataformas petroleras en alta mar.",
                            Estado = true,
                            ValorHora = 1450000f
                        },
                        new
                        {
                            CodServicio = 3,
                            Descr = "Perforación exploratoria en terrenos offshore.",
                            Estado = true,
                            ValorHora = 2200000f
                        },
                        new
                        {
                            CodServicio = 4,
                            Descr = "Capacitaciones y entrenamientos en seguridad industrial petrolera.",
                            Estado = false,
                            ValorHora = 170000f
                        });
                });

            modelBuilder.Entity("alkemyumsa.Entities.Trabajos", b =>
                {
                    b.Property<int>("CodTrabajo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cod_trabajo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodTrabajo"), 1L, 1);

                    b.Property<int>("CantHoras")
                        .HasColumnType("int")
                        .HasColumnName("cant_horas");

                    b.Property<int>("CodProyecto")
                        .HasColumnType("int")
                        .HasColumnName("cod_proyecto");

                    b.Property<int>("CodServicio")
                        .HasColumnType("int")
                        .HasColumnName("cod_servicio");

                    b.Property<double>("Costo")
                        .HasColumnType("float")
                        .HasColumnName("costo");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("DATETIME")
                        .HasColumnName("deleted_at");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha");

                    b.Property<double>("ValorHora")
                        .HasColumnType("float")
                        .HasColumnName("valor_hora");

                    b.HasKey("CodTrabajo");

                    b.HasIndex("CodProyecto");

                    b.HasIndex("CodServicio");

                    b.ToTable("Trabajo");

                    b.HasData(
                        new
                        {
                            CodTrabajo = 1,
                            CantHoras = 110,
                            CodProyecto = 1,
                            CodServicio = 1,
                            Costo = 20900000.0,
                            Fecha = new DateTime(2022, 6, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ValorHora = 190000.0
                        },
                        new
                        {
                            CodTrabajo = 2,
                            CantHoras = 200,
                            CodProyecto = 2,
                            CodServicio = 2,
                            Costo = 290000000.0,
                            Fecha = new DateTime(2022, 7, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ValorHora = 1450000.0
                        },
                        new
                        {
                            CodTrabajo = 3,
                            CantHoras = 300,
                            CodProyecto = 3,
                            CodServicio = 3,
                            Costo = 660000000.0,
                            Fecha = new DateTime(2022, 8, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ValorHora = 2200000.0
                        },
                        new
                        {
                            CodTrabajo = 4,
                            CantHoras = 24,
                            CodProyecto = 4,
                            CodServicio = 4,
                            Costo = 4080000.0,
                            Fecha = new DateTime(2022, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ValorHora = 170000.0
                        });
                });

            modelBuilder.Entity("alkemyumsa.Entities.Usuarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cod_usuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)")
                        .HasColumnName("contrasena_usuario");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("DATETIME")
                        .HasColumnName("deleted_at");

                    b.Property<int>("Dni")
                        .HasColumnType("INT")
                        .HasColumnName("dni");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(80)")
                        .HasColumnName("email_usuario");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(80)")
                        .HasColumnName("nombre_usuario");

                    b.Property<int>("Rol")
                        .HasColumnType("int")
                        .HasColumnName("rol");

                    b.HasKey("Id");

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Contrasena = "0be83396efc24a489442a7a903cb659a67ce5d47c5bbbf571f8bcf418e6f5e39",
                            Dni = 42641623,
                            Email = "franandreoli7@gmail.com",
                            Nombre = "Francisco",
                            Rol = 1
                        },
                        new
                        {
                            Id = 2,
                            Contrasena = "6581e8e1b74cae82b504659248ac9c5cb107530078e9426e6cea85aed2c327cf",
                            Dni = 38543765,
                            Email = "josé@gmail.com",
                            Nombre = "José",
                            Rol = 2
                        });
                });

            modelBuilder.Entity("alkemyumsa.Entities.Trabajos", b =>
                {
                    b.HasOne("alkemyumsa.Entities.Proyectos", "Proyecto")
                        .WithMany()
                        .HasForeignKey("CodProyecto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("alkemyumsa.Entities.Servicios", "Servicio")
                        .WithMany()
                        .HasForeignKey("CodServicio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proyecto");

                    b.Navigation("Servicio");
                });
#pragma warning restore 612, 618
        }
    }
}
